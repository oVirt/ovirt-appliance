url {{ data["url"] }}

{%- for r_name, r_url in data["repos"].items() %}
repo --name={{ r_name }} {{ r_url }}
{%- endfor %}

{%- if data["updates"] %}
updates {{ data["updates"] }}
{%- endif %}

lang en_US.UTF-8
keyboard us
timezone --utc Etc/UTC
bootloader --timeout=1 --append="console=tty1 console=ttyS0,115200n8"
authselect select minimal
selinux --enforcing
firewall --enabled --service={{ data["firewall"] }}
network --noipv6
services --enabled={{ data["services"] }}
rootpw --lock

user --name=node --lock
firstboot --disabled
# Partition clearing information
clearpart --all --initlabel
# Disk partitioning information
part /boot --fstype=xfs --size=1024
part pv.01 --grow --size=50176

volgroup ovirt --pesize=4096 pv.01

logvol / --fstype=xfs --name=root --vgname=ovirt --size=6144 --grow
logvol /home --fstype=xfs --name=home --vgname=ovirt --size=1024 --fsoptions="nodev"
logvol /tmp --fstype=xfs --name=tmp --vgname=ovirt --size=2048 --fsoptions="nodev,noexec,nosuid"
logvol /var --fstype=xfs --name=var --vgname=ovirt --size=18432 --fsoptions="nodev"
logvol /var/tmp --fstype=xfs --name=vartmp --vgname=ovirt --size=2048 --fsoptions="nodev,noexec,nosuid"
logvol /var/log --fstype=xfs --name=log --vgname=ovirt --size=10240 --fsoptions="nodev"
logvol /var/log/audit --fstype=xfs --name=audit --vgname=ovirt --size=1024 --fsoptions="nodev"
logvol swap --name=swap --vgname=ovirt --size=8192

poweroff

# Packages
%packages --excludedocs --excludeWeakdeps
@core
dnf
kernel
yum
nfs-utils
dnf-utils
grub2-pc
# oVirt is not using EFI
#grub2-efi-x64
#shim

# pull firmware packages out
-a*firmware*
-alsa-lib
-i*firmware*
-lib*firmware*

# cloud-init does magical things with EC2 metadata, including provisioning
# a user account with ssh keys.
cloud-init
## Adding a dependency for cloud-init as recommended by tdawson
python3-jsonschema

# allows the host machine to issue commands to the guest operating system
qemu-guest-agent

# need this for growpart, because parted doesn't yet support resizepart
# https://bugzilla.redhat.com/show_bug.cgi?id=966993
#cloud-utils

cloud-utils-growpart
# We need this image to be portable; also, rescue mode isn't useful here.
dracut-config-generic
dracut-norescue

# Needed by oVirt
firewalld

# cherry-pick a few things from @base
tar
tcpdump
rsync

# Some things from @core we can do without in a minimal install
-biosdevname
-plymouth
NetworkManager
-iprutils

# Because we need networking
dhcp-client

# Minimal Cockpit web console
cockpit-ws
cockpit-system

# Additions for STIG support and oVirt required packages
aide
cockpit
dracut-fips
grub2
opensc
openscap
openscap-utils
scap-security-guide
tmux

# Needed for supporting upgrade from 4.3 with SSO configured (RHBZ#1866811)
mod_auth_gssapi
# Additional packages for handling SSO enabled systems we recommend (RHBZ#1866811)
mod_session

# DISA STIG packages
rng-tools
rsyslog-gnutls
usbguard

# Distribution specific packages or with different name for different distributions
{%- for pkg in data["packages"] %}
{{ pkg }}
{%- endfor %}
%end

#
# Adding upstream oVirt
#
%post --erroronfail
set -xe
# For build issues debugging purpose, looking for known repositories
dnf repolist

dnf --repofrompath=extras-common-testing,https://buildlogs.centos.org/centos/8-stream/extras/x86_64/extras-common/  install -y --nogpgcheck {{ releaserpm }}
dnf config-manager --set-enabled centos-ovirt45-testing
dnf config-manager --set-enabled ovirt-45-upstream-testing


dnf -y update

dnf module enable -y javapackages-tools pki-deps 389-ds postgresql:12 mod_auth_openidc nodejs:14

dnf install -y \
	ovirt-engine \
	ovirt-engine-dwh \
	ovirt-provider-ovn

dnf install -y \
	ovirt-engine-extension-aaa-ldap-setup \
	mod_auth_openidc

# Additional packages for handling SSO enabled systems we recommend (RHBZ#1866811)
dnf install -y \
	ovirt-engine-extension-aaa-misc

#
echo "Creating a partial answer file"
#
cat > /root/ovirt-engine-answers <<__EOF__
{% include "ovirt-engine-answers" %}
__EOF__

echo "Enabling ssh_pwauth in cloud.cfg.d"
cat > /etc/cloud/cloud.cfg.d/42_ovirt_appliance.cfg <<__EOF__
# Enable ssh pwauth by default. This ensures that ssh_pwauth is
# even enabled when cloud-init does not find a seed.
ssh_pwauth: True
__EOF__

echo "Enabling fstrim"
systemctl enable fstrim.timer

echo "Enabling cockpit socket"
systemctl enable cockpit.socket

# this is installed by default but we don't need it in virt
echo "Removing linux-firmware package."
dnf -C -y remove linux-firmware

#
# Enable the guest agent
#
dnf install -y qemu-guest-agent
systemctl enable qemu-guest-agent

rm -vf /etc/sysconfig/network-scripts/ifcfg-e*

%end
